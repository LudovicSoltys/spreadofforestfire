{
  "timestamp": "2025-08-21T19:27:11.172+00:00",
  "status": 400,
  "error": "Bad Request",
  "trace": "org.springframework.web.bind.MethodArgumentNotValidException: Validation failed for argument [0] in public com.lso.sandbox.simulator.fires.FiresChangeResponse com.lso.sandbox.simulator.fires.FiresRestController.addFires(com.lso.sandbox.simulator.fires.FiresAddRequest) with 3 errors: [Field error in object 'firesAddRequest' on field 'targets[2]': rejected value [com.lso.sandbox.simulator.fires.FiresAddRequest$TargetItem@47f1c688]; codes [InBoundConstraint.firesAddRequest.targets[2],InBoundConstraint.firesAddRequest.targets,InBoundConstraint.targets[2],InBoundConstraint.targets,InBoundConstraint.com.lso.sandbox.simulator.fires.FiresAddRequest$TargetItem,InBoundConstraint]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [firesAddRequest.targets[2],targets[2]]; arguments []; default message [targets[2]]]; default message [The input list cannot contain more than 4 movies.]] [Field error in object 'firesAddRequest' on field 'targets[0]': rejected value [com.lso.sandbox.simulator.fires.FiresAddRequest$TargetItem@7fb6be9]; codes [InBoundConstraint.firesAddRequest.targets[0],InBoundConstraint.firesAddRequest.targets,InBoundConstraint.targets[0],InBoundConstraint.targets,InBoundConstraint.com.lso.sandbox.simulator.fires.FiresAddRequest$TargetItem,InBoundConstraint]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [firesAddRequest.targets[0],targets[0]]; arguments []; default message [targets[0]]]; default message [The input list cannot contain more than 4 movies.]] [Field error in object 'firesAddRequest' on field 'targets[1]': rejected value [com.lso.sandbox.simulator.fires.FiresAddRequest$TargetItem@273f7c6a]; codes [InBoundConstraint.firesAddRequest.targets[1],InBoundConstraint.firesAddRequest.targets,InBoundConstraint.targets[1],InBoundConstraint.targets,InBoundConstraint.com.lso.sandbox.simulator.fires.FiresAddRequest$TargetItem,InBoundConstraint]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [firesAddRequest.targets[1],targets[1]]; arguments []; default message [targets[1]]]; default message [The input list cannot contain more than 4 movies.]] \r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:159)\r\n\tat org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:227)\r\n\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:181)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)\r\n\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)\r\n\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)\r\n\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)\r\n\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)\r\n\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)\r\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)\r\n\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)\r\n\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat com.lso.sandbox.simulator.config.SpaRedirectFilterConfiguration$1.doFilterInternal(SpaRedirectFilterConfiguration.java:49)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)\r\n\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)\r\n\tat java.base/java.lang.Thread.run(Thread.java:1447)\r\n",
  "message": "Validation failed for object='firesAddRequest'. Error count: 3",
  "errors": [
    {
      "objectName": "firesAddRequest",
      "field": "targets[2]",
      "rejectedValue": {
        "x": 8,
        "y": 2
      },
      "codes": [
        "InBoundConstraint.firesAddRequest.targets[2]",
        "InBoundConstraint.firesAddRequest.targets",
        "InBoundConstraint.targets[2]",
        "InBoundConstraint.targets",
        "InBoundConstraint.com.lso.sandbox.simulator.fires.FiresAddRequest$TargetItem",
        "InBoundConstraint"
      ],
      "arguments": [
        {
          "codes": [
            "firesAddRequest.targets[2]",
            "targets[2]"
          ],
          "arguments": null,
          "defaultMessage": "targets[2]",
          "code": "targets[2]"
        }
      ],
      "defaultMessage": "The input list cannot contain more than 4 movies.",
      "bindingFailure": false,
      "code": "InBoundConstraint"
    },
    {
      "objectName": "firesAddRequest",
      "field": "targets[0]",
      "rejectedValue": {
        "x": 10,
        "y": 10
      },
      "codes": [
        "InBoundConstraint.firesAddRequest.targets[0]",
        "InBoundConstraint.firesAddRequest.targets",
        "InBoundConstraint.targets[0]",
        "InBoundConstraint.targets",
        "InBoundConstraint.com.lso.sandbox.simulator.fires.FiresAddRequest$TargetItem",
        "InBoundConstraint"
      ],
      "arguments": [
        {
          "codes": [
            "firesAddRequest.targets[0]",
            "targets[0]"
          ],
          "arguments": null,
          "defaultMessage": "targets[0]",
          "code": "targets[0]"
        }
      ],
      "defaultMessage": "The input list cannot contain more than 4 movies.",
      "bindingFailure": false,
      "code": "InBoundConstraint"
    },
    {
      "objectName": "firesAddRequest",
      "field": "targets[1]",
      "rejectedValue": {
        "x": 9,
        "y": 1
      },
      "codes": [
        "InBoundConstraint.firesAddRequest.targets[1]",
        "InBoundConstraint.firesAddRequest.targets",
        "InBoundConstraint.targets[1]",
        "InBoundConstraint.targets",
        "InBoundConstraint.com.lso.sandbox.simulator.fires.FiresAddRequest$TargetItem",
        "InBoundConstraint"
      ],
      "arguments": [
        {
          "codes": [
            "firesAddRequest.targets[1]",
            "targets[1]"
          ],
          "arguments": null,
          "defaultMessage": "targets[1]",
          "code": "targets[1]"
        }
      ],
      "defaultMessage": "The input list cannot contain more than 4 movies.",
      "bindingFailure": false,
      "code": "InBoundConstraint"
    }
  ],
  "path": "/api/fires"
}